/*
Deployment script for MVCDemoDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "MVCDemoDB"
:setvar DefaultFilePrefix "MVCDemoDB"
:setvar DefaultDataPath "C:\Users\Czajnero\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB"
:setvar DefaultLogPath "C:\Users\Czajnero\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CREATE_STATISTICS ON(INCREMENTAL = OFF),
                MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT = OFF,
                DELAYED_DURABILITY = DISABLED 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = ALL, DATA_FLUSH_INTERVAL_SECONDS = 900, INTERVAL_LENGTH_MINUTES = 60, MAX_PLANS_PER_QUERY = 200, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE = OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE SCOPED CONFIGURATION SET MAXDOP = 0;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET MAXDOP = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET LEGACY_CARDINALITY_ESTIMATION = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET LEGACY_CARDINALITY_ESTIMATION = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET PARAMETER_SNIFFING = ON;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET PARAMETER_SNIFFING = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET QUERY_OPTIMIZER_HOTFIXES = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET QUERY_OPTIMIZER_HOTFIXES = PRIMARY;
    END


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating [dbo].[Employee]...';


GO
CREATE TABLE [dbo].[Employee] (
    [Id]           INT           IDENTITY (1, 1) NOT NULL,
    [EmployeeId]   INT           NOT NULL,
    [FirstName]    NVARCHAR (50) NOT NULL,
    [LastName]     NVARCHAR (50) NOT NULL,
    [EmailAddress] NVARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Klienci]...';


GO
CREATE TABLE [dbo].[Klienci] (
    [Id_klienta]   INT           IDENTITY (1, 1) NOT NULL,
    [imie]         NVARCHAR (30) NOT NULL,
    [nazwisko]     NVARCHAR (30) NOT NULL,
    [pesel]        NVARCHAR (11) NOT NULL,
    [kod_pocztowy] NVARCHAR (5)  NOT NULL,
    [miasto]       NVARCHAR (25) NOT NULL,
    [ulica]        NVARCHAR (25) NOT NULL,
    [nr_domu]      NVARCHAR (5)  NOT NULL,
    [nr_lokalu]    NVARCHAR (5)  NOT NULL,
    [r_dokument]   NVARCHAR (25) NOT NULL,
    [nr_dokument]  NVARCHAR (25) NOT NULL,
    [nip]          NVARCHAR (10) NOT NULL,
    [data_ur]      DATE          NOT NULL,
    [telefon]      NVARCHAR (15) NOT NULL,
    [email]        NVARCHAR (40) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id_klienta] ASC)
);


GO
PRINT N'Creating [dbo].[Pojazdy]...';


GO
CREATE TABLE [dbo].[Pojazdy] (
    [Id_pojazd]     INT           IDENTITY (1, 1) NOT NULL,
    [marka]         NVARCHAR (50) NOT NULL,
    [model]         NVARCHAR (50) NOT NULL,
    [rok_prod]      INT           NOT NULL,
    [nr_rej]        NVARCHAR (7)  NOT NULL,
    [przebieg]      BIGINT        NOT NULL,
    [rodzaj_pal]    NVARCHAR (50) NOT NULL,
    [kolor]         NVARCHAR (50) NOT NULL,
    [rodzaj_pojazd] NVARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id_pojazd] ASC)
);


GO
PRINT N'Creating [dbo].[Transakcje]...';


GO
CREATE TABLE [dbo].[Transakcje] (
    [Id_transakcji] INT           NOT NULL,
    [Id_klienta]    INT           NOT NULL,
    [Id_pojazd]     INT           NOT NULL,
    [rodzaj_tran]   NVARCHAR (10) NOT NULL,
    [kwota]         MONEY         NOT NULL,
    [nr_faktury]    NVARCHAR (20) NOT NULL,
    [sposob_zapl]   NVARCHAR (10) NOT NULL,
    [znizka]        INT           NOT NULL,
    [data_tran]     DATE          NOT NULL,
    [zaplacono]     BIT           NOT NULL,
    PRIMARY KEY CLUSTERED ([Id_transakcji] ASC)
);


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'e0cf1d76-5d9f-44c6-830a-18b66599db08')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('e0cf1d76-5d9f-44c6-830a-18b66599db08')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'b4ddb29c-affa-4008-8401-80710a48a9a6')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('b4ddb29c-affa-4008-8401-80710a48a9a6')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'd77c8e1b-647e-4f58-84fc-9af0e52e1536')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('d77c8e1b-647e-4f58-84fc-9af0e52e1536')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '56dc5290-d0e9-4884-94a4-827ad5e74de6')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('56dc5290-d0e9-4884-94a4-827ad5e74de6')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '80bc9464-c878-45fc-8782-b78266d96c6a')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('80bc9464-c878-45fc-8782-b78266d96c6a')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '48cee491-5d26-4692-8948-e2e74969ebae')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('48cee491-5d26-4692-8948-e2e74969ebae')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'a9801484-f803-4517-b04f-1d5cb956b370')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('a9801484-f803-4517-b04f-1d5cb956b370')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '6d4dc6e8-178e-474c-aca0-449d7e6a77ae')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('6d4dc6e8-178e-474c-aca0-449d7e6a77ae')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'd47508f9-eb50-461e-9dbb-d31fed388f2f')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('d47508f9-eb50-461e-9dbb-d31fed388f2f')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '1bf4e63a-d881-4a0b-add7-a635f1be5d47')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('1bf4e63a-d881-4a0b-add7-a635f1be5d47')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '3384a529-d29f-4b0a-a9b6-4d8ea5cc4a8c')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('3384a529-d29f-4b0a-a9b6-4d8ea5cc4a8c')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'be0d4db2-1bd3-4127-937b-93c001a5c291')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('be0d4db2-1bd3-4127-937b-93c001a5c291')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '5ab4196c-89a0-409e-98b3-d6ade3c57515')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('5ab4196c-89a0-409e-98b3-d6ade3c57515')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '31a508fd-7de6-4d12-82e7-d35d957a0a6c')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('31a508fd-7de6-4d12-82e7-d35d957a0a6c')

GO

GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
